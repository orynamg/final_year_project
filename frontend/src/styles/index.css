@tailwind base;
@tailwind components;
@tailwind utilities;
@import url("https://fonts.googleapis.com/css2?family=Josefin+Sans&family=Roboto+Flex:opsz,wght@8..144,300&display=swap");

body {
  margin: 0;
  font-family: "Josefin Sans", sans-serif;
  font-family: "Roboto Flex", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html {
  scroll-behavior: smooth;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;
}

.navbar {
  min-height: 5rem /* 64px */;
}

.menu {
  padding: 0 0;
  flex-wrap: nowrap !important;
  padding-bottom: -5rem;
  margin-bottom: -5rem;
}

.btn-paper-plane {
  cursor: pointer;
}

.btn-paper-plane:hover {
  transform: scale(1.075);
  -webkit-transition: transform 0.25s ease-in-out;
}

.btn-paper-plane:active {
  transform: scale(0.8);
  -webkit-transition: transform 0.25s ease-in-out;
}

.nice-turn:hover {
  transform: rotate(1turn);
  -webkit-transition: transform 0.4s ease-in-out;
  opacity: 0.5;
}

.nice-turn:active {
  transform: scale(0.8);
  -webkit-transition: transform 0.25s ease-in-out;
}

.small-label {
  display: block;
  width: 0;
  height: 0;
}

.drawer-toggle:checked ~ .drawer-side > .drawer-overlay {
  background-color: #0002 !important;
}

.shadow {
  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,
    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,
    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;
}

.collapse-title,
:where(.collapse > input[type="checkbox"]),
:where(.collapse > input[type="radio"]) {
  padding-inline-end: 1rem !important;
}

.object-fit {
  object-position: 60% 30%;
}

.gm-style .gm-style-iw-c {
  background-color: #0f172a;
  color: #fff;
  margin-right: 0.5rem;
}

.gm-style .gm-style-iw-d {
  background-color: #0f172a;
  overflow: hidden !important;
}

element.style {
  overflow: hidden;
  max-height: 613px;
}

.gm-style .gm-style-iw-tc::after {
  background-color: #0f172a;
}

button.gm-ui-hover-effect {
  opacity: 0.6;
  color: #fff !important;
  background-color: #475569 !important;
  border-radius: 0.5rem;
  top: 0.5rem !important;
  right: 0.5rem !important;
}

@keyframes grow {
  0% {
    max-height: var(--lineHeight);
  }
  100% {
    max-height: calc(var(--lineHeight) * var(--lines));
  }
}

@keyframes carriageReturn {
  0% {
    top: 0;
  }
  100% {
    top: calc(var(--lineHeight) * var(--lines));
  }
}

@keyframes type {
  0% {
    width: 100%;
  }
  100% {
    width: 0%;
  }
}

@keyframes caret {
  0% {
    color: var(--bgColor);
  }
  100% {
    color: white;
  }
}

.typewriter {
  --bgColor: #1e293b;
  --lines: 500;
  --lineHeight: 1.5rem;
  --timePerLine: 4s;
  --widthCh: 22;
  --width: calc(var(--widthCh) * 1ch);
  /* do not touch the time property!!! */
  --time: calc(var(--lines) * var(--timePerLine));
  animation: grow var(--time) steps(var(--lines));
  animation-fill-mode: forwards;
  background: var(--bgColor);
  line-height: var(--lineHeight);
  max-height: var(--lineHeight);
  overflow: hidden;
  position: relative;
  //width: var(--width);
  /* word-break: break-all; */
}

.typewriter::before {
  content: "";
  animation: type var(--timePerLine) linear infinite,
    carriageReturn var(--time) steps(var(--lines)) var(--lines),
    caret 0.5s steps(2) infinite;
  background: var(--bgColor);
  border-left: 2px solid;
  bottom: 0;
  height: 2rem;
  position: absolute;
  right: 0;
  width: 100%;
}

.typewriter.no-caret::before {
  border-left-width: 0;
}

.typewriter.big-caret::before {
  border-left-width: 1ch;
}

.typewriter.monospace {
  font-family: monospace, monospace;
}

.typewriter.monospace::before {
  animation: type var(--timePerLine) steps(var(--widthCh)) infinite,
    carriageReturn var(--time) steps(var(--lines)) var(--lines),
    caret 0.5s steps(2) infinite;
}

/* DEMO */
section {
  box-sizing: border-box;
  display: flex;
  justify-content: space-between;
  left: 0;
  padding: 1rem;
  position: absolute;
  top: 1rem;
  width: 100%;
}

section:nth-child(2) {
  top: 10rem;
}
section:nth-child(3) {
  top: 20rem;
}

.lorem {
  --widthCh: 60;
  --timePerLine: 3s;
}
