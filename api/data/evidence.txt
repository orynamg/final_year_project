[20/Jan/2024 17:47:54] "GET /api/query?areas=N10,E14 HTTP/1.1" 200 299
{'text': 'Give me 5 safest areas'}
SELECT SUBSTR(postcode, 1, 3) AS area, COUNT(*) AS crime_count
FROM api_crimeincident
WHERE SUBSTR(postcode, 1, 1) IN ('N', 'S', 'W', 'E')
GROUP BY area
ORDER BY crime_count ASC
LIMIT 5;
[20/Jan/2024 18:17:49] "POST /api/search HTTP/1.1" 200 41
{'text': 'Give me 5 areas with the most sexual harrasment'}
SELECT SUBSTR(postcode, 1, 3) AS area, COUNT(*) AS count
FROM api_crimeincident
WHERE category = 'Violence and sexual offences' AND (postcode LIKE 'N%' OR postcode LIKE 'S%' OR postcode LIKE 'W%' OR postcode LIKE 'E%')
GROUP BY area
ORDER BY count DESC
LIMIT 5;
[20/Jan/2024 18:18:39] "POST /api/search HTTP/1.1" 200 41
{'text': 'Give me 5 areas with the most theft of all kinds'}
SELECT SUBSTR(postcode, 1, 3) AS area, COUNT(*) AS theft_count
FROM api_crimeincident
WHERE category IN ('Theft from the person', 'Vehicle crime', 'Other theft', 'Shoplifting', 'Bicycle theft')
AND SUBSTR(postcode, 1, 1) IN ('N', 'S', 'W', 'E')
GROUP BY area
ORDER BY theft_count DESC
LIMIT 5;

// cleaning the db to only contain London postcodes
delete from api_crimeincident where postcode not regexp '^(SW|SE|W|NW|N|E|WC|EC)[0-9]{1,3} [A-Za-z0-9]{3,5}$';


{'text': 'gime me the area with the cheapest average property cost'}
SELECT SUBSTR(postcode, 1, 3) AS area, AVG(price) AS avg_price
FROM api_property
GROUP BY area
ORDER BY avg_price ASC
LIMIT 5;


{'text': 'gime me area with the most flats with 3 bedrooms and where the most common crime type is drug related'}
SELECT area_code, COUNT(*) as flat_count, crime_category
FROM (
    SELECT SUBSTR(p.postcode, 1, 3) as area_code, c.category as crime_category
    FROM api_property p
    JOIN api_crimeincident c ON SUBSTR(c.postcode, 1, 3) = SUBSTR(p.postcode, 1, 3)
    WHERE p.bedrooms = 3 AND c.category = 'Drugs'
) 
GROUP BY area_code, crime_category
ORDER BY flat_count DESC, crime_category DESC
LIMIT 5;
[18/Feb/2024 16:56:20] "POST /api/search HTTP/1.1" 200 40

{'text': 'gime meee an the safest areas with 3 bedroom'}
SELECT area.code, area.name, COUNT(crime.category) as crime_count
FROM api_area as area
JOIN api_property as prop ON SUBSTR(prop.postcode, 1, INSTR(prop.postcode, ' ') - 1) = area.code
LEFT JOIN api_crimeincident as crime ON SUBSTR(crime.postcode, 1, INSTR(crime.postcode, ' ') - 1) = area.code
WHERE prop.bedrooms = 3
GROUP BY area.code
ORDER BY crime_count ASC
LIMIT 5;

// fails 

{'text': 'gime the areas with highest property prices'}
SELECT area_code, AVG(price) as avg_price
FROM (
    SELECT SUBSTR(postcode, 1, INSTR(postcode, ' ') - 1) as area_code, price
    FROM api_property
) 
GROUP BY area_code
ORDER BY avg_price DESC
LIMIT 5;
[18/Ft': 'gime the areas with highest property prices'}
SELECT area_code, AVG(price) as avg_price
FROM (
    SELECT SUBSTR(postcode, 1, INSTR(postcode, ' ') - 1) as area_code, price
    FROM api_property
) 
WHERE area_code NOT IN (
    SELECT DISTINCT SUBSTR(postcode, 1, INSTR(postcode, ' ') - 1) as area_code
    FROM api_crimeincident
)
GROUP BY area_code
ORDER BY avg_price DESC
LIMIT 5;
eb/2024 18:01:21] "POST /api/search HTTP/1.1" 200 22
{'tex
[18/Feb/2024 18:01:25] "POST /api/search HTTP/1.1" 200 22
[18/Feb/2024 18:01:50] "GET /api/areas/ HTTP/1.1" 200 10765
[18/Feb/2024 18:02:04] "GET /api/areas/ HTTP/1.1" 200 10765
{'text': 'gime the areas with highest property prices. do not include anything to do with crimes. ignore crime'}
SELECT api_area.name, AVG(api_property.price) as average_price
FROM api_area
JOIN api_property ON SUBSTR(api_property.postcode, 1, INSTR(api_property.postcode, ' ') - 1) = api_area.code
GROUP BY api_area.name
ORDER BY average_price DESC
LIMIT 5;
[18/Feb/2024 18:02:34] "POST /api/search HTTP/1.1" 200 31
[18/Feb/2024 18:05:16] "GET /api/areas/ HTTP/1.1" 200 10765
[18/Feb/2024 18:06:07] "GET /api/areas/ HTTP/1.1" 200 10765
{'text': 'gime me expensivre areas'}
SELECT api_area.code, api_area.name, AVG(api_property.price) as average_price, COUNT(api_crimeincident.id) as crime_count
FROM api_area
JOIN api_property ON SUBSTR(api_property.postcode, 1, INSTR(api_property.postcode, ' ') - 1) = api_area.code
LEFT JOIN api_crimeincident ON SUBSTR(api_crimeincident.postcode, 1, INSTR(api_crimeincident.postcode, ' ') - 1) = api_area.code
GROUP BY api_area.code
ORDER BY average_price DESC, crime_count ASC
LIMIT 5;


{'text': 'gime me an area where the average house price is between 500,000-600,000 and it is the 10th safest area out of all london areas. '}
SELECT area.code, area.name, AVG(property.price) as avg_price, COUNT(crime.postcode) as crime_count
FROM api_area as area
JOIN api_property as property ON SUBSTR(property.postcode, 1, INSTR(property.postcode, ' ') - 1) = area.code
LEFT JOIN api_crimeincident as crime ON SUBSTR(crime.postcode, 1, INSTR(crime.postcode, ' ') - 1) = area.code
WHERE property.price BETWEEN 500000 AND 600000
GROUP BY area.code
ORDER BY crime_count ASC, avg_price DESC
LIMIT 5 OFFSET 9;

[20/Feb/2024 13:25:04] "GET /api/areas/ HTTP/1.1" 200 10765
{'text': "Give me an area with most transport links'}"}
SELECT SUBSTR(api_stationunit.postcode, 1, INSTR(api_stationunit.postcode, ' ') - 1) AS area_code, COUNT(DISTINCT api_station.name) AS station_count
FROM api_station
INNER JOIN api_stationunit ON api_station.station_code=SUBSTR(api_stationunit.unit_code, 1, LENGTH(api_station.station_code))
WHERE area_code LIKE 'SW%' OR area_code LIKE 'SE%' OR area_code LIKE 'W%' OR area_code LIKE 'NW%' OR area_code LIKE 'N%' OR area_code LIKE 'E%' OR area_code LIKE 'WC%' OR area_code LIKE 'EC%'
GROUP BY area_code
ORDER BY station_count DESC
LIMIT 5;

[ 20/Feb/2024 13:26:29] "GET /api/areas/ HTTP/1.1" 200 10765
st{'text': 'Give me an area with most bus stops'}
SELECT SUBSTR(api_stationunit.postcode, 1, INSTR(api_stationunit.postcode, ' ') - 1) AS area_code, COUNT(*) AS bus_stop_count
FROM api_stationunit
WHERE api_stationunit.unit_code LIKE '%Bus%'
AND (area_code LIKE 'SW%' OR area_code LIKE 'SE%' OR area_code LIKE 'W%' OR area_code LIKE 'NW%' OR area_code LIKE 'N%' OR area_code LIKE 'E%' OR area_code LIKE 'WC%' OR area_code LIKE 'EC%')
GROUP BY area_code
ORDER BY bus_stop_count DESC
LIMIT 5;

{'text': 'Give me an area with most stations within fare zone 2 or lower, the most common crimes are not drug related  and where most houses have more than 1 reception'}
SELECT area_code, COUNT(station_name) as station_count, COUNT(category) as crime_count, COUNT(receptions) as reception_count
FROM (
    SELECT SUBSTR(api_stationunit.postcode, 1, INSTR(api_stationunit.postcode, ' ') - 1) as area_code, api_station.name as station_name, api_crimeincident.category, api_property.receptions
    FROM api_station
    INNER JOIN api_stationunit ON api_station.station_code=SUBSTR(api_stationunit.unit_code, 1, LENGTH(api_station.station_code))
    LEFT JOIN api_crimeincident ON api_stationunit.postcode = api_crimeincident.postcode
    LEFT JOIN api_property ON api_stationunit.postcode = api_property.postcode
    WHERE api_station.fare_zone <= 2
    AND api_crimeincident.category != 'Drugs'
    AND api_property.receptions > 1
    AND (area_code LIKE 'SW%' OR area_code LIKE 'SE%' OR area_code LIKE 'W%' OR area_code LIKE 'NW%' OR area_code LIKE 'N%' OR area_code LIKE 'E%' OR area_code LIKE 'WC%' OR area_code LIKE 'EC%')
)
GROUP BY area_code
ORDER BY station_count DESC, crime_count ASC, reception_count DESC
LIMIT 5;

{'text': 'Show areas where the most properties are new builds, that are closely located to the City Of London \n'}
SELECT area_code, COUNT(*) as property_count
FROM (
    SELECT SUBSTR(api_property.postcode, 1, INSTR(api_property.postcode, ' ') - 1) as area_code, api_property.id
    FROM api_property
    WHERE api_property.house_type = 'New Development' AND api_property.city = 'City Of London'
) as new_build_properties
GROUP BY area_code
ORDER BY property_count DESC
LIMIT 5

{'text': 'give me areas where most properties are 2 bedroom flats that are under 1000m2'}
SELECT SUBSTR(api_property.postcode, 1, INSTR(api_property.postcode, ' ') - 1) AS area_code, COUNT(*) AS property_count
FROM api_property
WHERE api_property.bedrooms = 2 AND api_property.house_type = 'Flat / Apartment' AND api_property.area_sqft < 1000
GROUP BY area_code
ORDER BY property_count DESC
LIMIT 5
[22/Feb/2024 10:34:29] "POST /api/search HTTP/1.1" 200 42
{'text': 'give me areas where most properties are 3 bedroom flats that are under 1000m2'}
SELECT SUBSTR(api_property.postcode, 1, INSTR(api_property.postcode, ' ') - 1) AS area_code, COUNT(*) AS property_count
FROM api_property
WHERE api_property.bedrooms = 3 AND api_property.house_type = 'Flat / Apartment' AND api_property.area_sqft < 1000
GROUP BY area_code
ORDER BY property_count DESC
LIMIT 5

{'text': 'give me areas where most properties are 3 bedroom flats that are under 1000m2 and it is close to the city of london'}
SELECT SUBSTR(api_property.postcode, 1, INSTR(api_property.postcode, ' ') - 1) AS area_code, COUNT(*) AS property_count
FROM api_property
WHERE api_property.house_type = 'Flat / Apartment'
AND api_property.bedrooms = 3
AND api_property.area_sqft < 1000
AND SUBSTR(api_property.postcode, 1, 2) = 'EC'
GROUP BY area_code
ORDER BY property_count DESC
LIMIT 5

{'text': 'near finsbury park'}
SELECT SUBSTR(api_property.postcode, 1, INSTR(api_property.postcode, ' ') - 1) AS area_code, COUNT(*) AS property_count
FROM api_property
INNER JOIN api_stationunit ON api_property.postcode = api_stationunit.postcode
INNER JOIN api_station ON api_station.station_code = SUBSTR(api_stationunit.unit_code, 1, LENGTH(api_station.station_code))
WHERE api_property.city LIKE '%finsbury park%'
AND (area_code LIKE 'SW%' OR area_code LIKE 'SE%' OR area_code LIKE 'W%' OR area_code LIKE 'NW%' OR area_code LIKE 'N%' OR area_code LIKE 'E%' OR area_code LIKE 'WC%' OR area_code LIKE 'EC%')
GROUP BY area_code
ORDER BY property_count DESC
LIMIT 5;
[25/Feb/2024 22:05:06] "POST /api/search HTTP/1.1" 200 12
[25/Feb/2024 22:05:16] "GET /api/areas/ HTTP/1.1" 200 10765
[25/Feb/2024 22:06:15] "GET /api/areas/ HTTP/1.1" 200 10765
{'text': 'near finsbury park'}
SELECT SUBSTR(api_stationunit.postcode, 1, INSTR(api_stationunit.postcode, ' ') - 1) AS area_code, COUNT(DISTINCT api_station.name) AS station_count
FROM api_station
INNER JOIN api_stationunit ON api_station.station_code=SUBSTR(api_stationunit.unit_code, 1, LENGTH(api_station.station_code))
WHERE api_station.name LIKE '%finsbury park%'
GROUP BY area_code
HAVING area_code GLOB '[SE|SW|W|NW|N|E|WC|EC]*'
ORDER BY station_count DESC
LIMIT 5;
[25/Feb/2024 22:06:21] "POST /api/search HTTP/1.1" 200 16
%s ['N4']
[25/Feb/2024 22:06:23] "GET /api/properties?areas=N4 HTTP/1.1" 200 2279
[25/Feb/2024 22:06:42] "GET /api/areas/ HTTP/1.1" 200 10765
{'text': 'near highgate'}
SELECT SUBSTR(api_property.postcode, 1, INSTR(api_property.postcode, ' ') - 1) AS area_code,
       COUNT(DISTINCT api_station.name) AS station_count
FROM api_property
LEFT JOIN api_stationunit ON api_property.postcode = api_stationunit.postcode
LEFT JOIN api_station ON api_station.station_code = SUBSTR(api_stationunit.unit_code, 1, LENGTH(api_station.station_code))
WHERE api_property.postcode LIKE 'N%' OR api_property.postcode LIKE 'NW%'
GROUP BY area_code
ORDER BY station_count DESC
LIMIT 5;

{'text': 'give me 5 areas close to the river thames\n'}
SELECT SUBSTR(api_area.postcode, 1, INSTR(api_area.postcode, ' ') - 1) AS area_code, COUNT(*) AS station_count
FROM api_area
JOIN api_stationunit ON api_area.postcode = api_stationunit.postcode
JOIN api_station ON api_station.station_code = SUBSTR(api_stationunit.unit_code, 1, LENGTH(api_station.station_code))
WHERE api_area.centre_lat BETWEEN 51.4831 AND 51.6878
AND api_area.centre_long BETWEEN -0.6044 AND 0.0553
AND area_code REGEXP '^(SW|SE|W|NW|N|E|WC|EC)'
GROUP BY area_code
ORDER BY station_count DESC
LIMIT 5;

{'text': 'give me an area where the avergae property price is above 700 and there are 2 stations in the area'}
SELECT SUBSTR(api_property.postcode, 1, INSTR(api_property.postcode, ' ') - 1) AS area_code,
       AVG(api_property.price) AS average_price,
       COUNT(DISTINCT api_station.name) AS station_count
FROM api_property
JOIN api_stationunit ON api_property.postcode = api_stationunit.postcode
JOIN api_station ON api_station.station_code = SUBSTR(api_stationunit.unit_code, 1, LENGTH(api_station.station_code))
GROUP BY area_code
HAVING average_price > 700 AND station_count = 2 AND (area_code LIKE 'SW%' OR area_code LIKE 'SE%' OR area_code LIKE 'W%' OR area_code LIKE 'NW%' OR area_code LIKE 'N%' OR area_code LIKE 'E%' OR area_code LIKE 'WC%' OR area_code LIKE 'EC%')
ORDER BY station_count DESC
LIMIT 5;

{'text': 'give me an area with the most schools'}
SELECT SUBSTR(api_school.postcode, 1, INSTR(api_school.postcode, ' ') - 1) AS area_code, COUNT(*) AS school_count
FROM api_school
WHERE area_code LIKE 'SW%' OR area_code LIKE 'SE%' OR area_code LIKE 'W%' OR area_code LIKE 'NW%' OR area_code LIKE 'N%' OR area_code LIKE 'E%' OR area_code LIKE 'WC%' OR area_code LIKE 'EC%'
GROUP BY area_code
ORDER BY school_count DESC
LIMIT 5;

{'text': 'give me an area with the some schools and at least one vehicle charging point'}
SELECT SUBSTR(api_school.postcode, 1, INSTR(api_school.postcode, ' ') - 1) AS area_code,
       COUNT(DISTINCT api_school.name) AS school_count,
       COUNT(DISTINCT api_vehiclechargingpoint.site_name) AS charging_point_count
FROM api_school
INNER JOIN api_vehiclechargingpoint
ON SUBSTR(api_school.postcode, 1, INSTR(api_school.postcode, ' ') - 1) = SUBSTR(api_vehiclechargingpoint.postcode, 1, INSTR(api_vehiclechargingpoint.postcode, ' ') - 1)
WHERE area_code LIKE 'SW%' OR area_code LIKE 'SE%' OR area_code LIKE 'W%' OR area_code LIKE 'NW%' OR area_code LIKE 'N%' OR area_code LIKE 'E%' OR area_code LIKE 'WC%' OR area_code LIKE 'EC%'
GROUP BY area_code
HAVING school_count > 0 AND charging_point_count > 0
ORDER BY school_count DESC, charging_point_count DESC
LIMIT 5;

{'text': 'give me areas with most schools and least crime'}
SELECT area_code, COUNT(DISTINCT school_id) AS school_count, COUNT(DISTINCT crime_id) AS crime_count
FROM (
    SELECT SUBSTR(api_school.postcode, 1, INSTR(api_school.postcode, ' ')-1) AS area_code, api_school.id AS school_id, api_crimeincident.id AS crime_id
    FROM api_school
    LEFT JOIN api_crimeincident ON SUBSTR(api_school.postcode, 1, INSTR(api_school.postcode, ' ')-1) = SUBSTR(api_crimeincident.postcode, 1, INSTR(api_crimeincident.postcode, ' ')-1)
    WHERE area_code LIKE 'SW%' OR area_code LIKE 'SE%' OR area_code LIKE 'W%' OR area_code LIKE 'NW%' OR area_code LIKE 'N%' OR area_code LIKE 'E%' OR area_code LIKE 'WC%' OR area_code LIKE 'EC%'
) AS subquery
GROUP BY area_code
ORDER BY school_count DESC, crime_count ASC
LIMIT 5;

{'text': 'Give me an area with most schools, least crime and the most common store is tesco'}
SELECT area_code, COUNT(*) as school_count, crime_count, retailer
FROM (
    SELECT school.area_code, COUNT(*) as school_count
    FROM api_school AS school
    WHERE school.area_code REGEXP '(^SW|^SE|^W|^NW|^N|^E|^WC|^EC)\d'
    GROUP BY school.area_code
) AS school_count
JOIN (
    SELECT crime.area_code, COUNT(*) as crime_count
    FROM api_crimeincident AS crime
    WHERE crime.area_code REGEXP '(^SW|^SE|^W|^NW|^N|^E|^WC|^EC)\d'
    GROUP BY crime.area_code
) AS crime_count ON school_count.area_code = crime_count.area_code
JOIN (
    SELECT grocery.area_code, grocery.retailer, COUNT(*) as retailer_count
    FROM api_groceryshop AS grocery
    WHERE grocery.area_code REGEXP '(^SW|^SE|^W|^NW|^N|^E|^WC|^EC)\d' AND grocery.retailer LIKE '%tesco%'
    GROUP BY grocery.area_code, grocery.retailer
) AS grocery_count ON school_count.area_code = grocery_count.area_code
ORDER BY school_count DESC, crime_count ASC, retailer_count DESC
LIMIT 5;

{'text': 'most affluent places'}
SELECT area_code, AVG(price) as avg_price
FROM (
    SELECT SUBSTR(api_property.postcode, 1, INSTR(api_property.postcode, ' ')-1) AS area_code, api_property.price
    FROM api_property
    WHERE SUBSTR(api_property.postcode, 1, INSTR(api_property.postcode, ' ')-1) REGEXP '(^SW|^SE|^W|^NW|^N|^E|^WC|^EC)\d'
) as property
GROUP BY area_code
ORDER BY avg_price DESC
LIMIT 5;

{'text': 'areas with a lot of water'}
SELECT area_code, SUM(blue_area_hectares) as total_blue_area
FROM (
    SELECT REGEXP_REPLACE(postcode, '^\w+\d+', '') as area_code, blue_area_hectares
    FROM api_greenbluearea
    WHERE area_code REGEXP '(^SW|^SE|^W|^NW|^N|^E|^WC|^EC)\d'
) as subquery
GROUP BY area_code
ORDER BY total_blue_area DESC
LIMIT 5;

{'text': 'give me areas next to buckingam palace'}
SELECT area_code 
FROM (
    SELECT regex_find('^\w+\d+', api_property.postcode) as area_code, COUNT(*) as count
    FROM api_property
    WHERE api_property.latitude BETWEEN 51.4980 AND 51.5020
    AND api_property.longitude BETWEEN -0.1425 AND -0.1385
    AND area_code REGEXP '(^SW|^SE|^W|^NW|^N|^E|^WC|^EC)\d'
    GROUP BY area_code
    ORDER BY count DESC
) as subquery
LIMIT 5


{'text': 'where can i buy a cheap property in a safe place in London'}
SELECT property.area_code, COUNT(crime.category) as crime_count, AVG(property.price) as avg_price
FROM (
    SELECT api_property.*, regex_find('^\w+\d+', api_property.postcode) as area_code
    FROM api_property
    WHERE api_property.city = 'London'
) as property
LEFT JOIN (
    SELECT api_crimeincident.*, regex_find('^\w+\d+', api_crimeincident.postcode) as area_code
    FROM api_crimeincident
) as crime
ON property.area_code = crime.area_code
WHERE property.area_code REGEXP '(^SW|^SE|^W|^NW|^N|^E|^WC|^EC)\d'
GROUP BY property.area_code
HAVING crime_count = MIN(crime_count)
ORDER BY avg_price ASC
LIMIT 5;
misuse of aliased aggregate crime_count

2024-04-04 14:19:48,368 api.views INFO {'text': 'give me safe areas with schools'}
2024-04-04 14:20:00,950 httpx INFO HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-04-04 14:20:00,958 api.views INFO SELECT area_code, COUNT(*) as school_count, COUNT(crime.category) as crime_count
FROM (
    SELECT regex_find('^\w+\d+', school.postcode) as area_code, school.name
    FROM api_school as school
    WHERE area_code REGEXP '(^SW|^SE|^W|^NW|^N|^E|^WC|^EC)\d'
) as school
LEFT JOIN (
    SELECT regex_find('^\w+\d+', crime.postcode) as area_code, crime.category
    FROM api_crimeincident as crime
    WHERE area_code REGEXP '(^SW|^SE|^W|^NW|^N|^E|^WC|^EC)\d'
) as crime
ON school.area_code = crime.area_code
GROUP BY school.area_code
HAVING COUNT(crime.category) < 5
ORDER BY school_count DESC, crime_count ASC
LIMIT 5;
ambiguous column name: area_code


SELECT area.code, AVG(property.price) as avg_price, COUNT(station.station_code) as station_count
FROM api_area as area
JOIN api_property as property ON regex_find('^\w+\d+', property.postcode) = area.code
JOIN api_stationunit as station_unit ON regex_find('^\w+\d+', station_unit.postcode) = area.code
JOIN api_station as station ON station.station_code = SUBSTR(station_unit.unit_code, 1, LENGTH(station.station_code))
WHERE area.code REGEXP '(^NW|^N)\d'
GROUP BY area.code
ORDER BY avg_price ASC, station_count DESC
LIMIT 5;


.Which areas are closest to the city of london
2024-04-12 15:24:14,451 httpx INFO HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
SELECT area.code AS area_code, 
       ( 3959 * acos( cos( radians(51.5074) ) * cos( radians( area.centre_lat ) ) * cos( radians( area.centre_long ) - radians(-0.1278) ) + sin( radians(51.5074) ) * sin( radians( area.centre_lat ) ) ) ) AS distance 
FROM api_area AS area 
WHERE area.code REGEXP '(^SW|^SE|^W|^NW|^N|^E|^WC|^EC)\d' 
ORDER BY distance 
LIMIT 5;

{'text': 'give me areas in west london with avergae house prices over a million'}
SELECT api_area.code
FROM api_area
INNER JOIN (
    SELECT regex_find('^\w+\d+', postcode) as area_code, AVG(price) as avg_price
    FROM api_property
    WHERE price IS NOT NULL AND postcode IS NOT NULL AND (postcode REGEXP '(^W|^WC)\d')
    GROUP BY area_code
    HAVING avg_price > 1000000
) AS subquery
ON api_area.code = subquery.area_code
ORDER BY subquery.avg_price DESC
LIMIT 5